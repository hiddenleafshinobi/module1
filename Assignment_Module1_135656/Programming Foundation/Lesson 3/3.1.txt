/*********************************************************************
 * File                 : 3.1.txt
 * Author Name          : Pratik Potdar
 * Desc                 : Answer based on algorithm
 * Version              : 1.0
 * Last Modified Date   : 05-SEPTEMBER-2017
 * Change Description   : Description about the changes implemented
 *********************************************************************/

3.1     ALGORITHM Check(A[0..n-1])
//Input: An array A[0..n-1] of n real numbers
x? A[0]; y?A[0]
for i?1 to n-1 do
     if A[i]<x
          x? A[i]
     if A[i]>y
          y? A[i]
return y-x

For the algorithm given above,
1)  What does this algorithm computes? 
Ans:this algorithm used find smallest as well as largest number in array also difference between smallest and largest number 
    in array.

2)  What is its basic operation?
Ans:comparing the numbers in the given examples, the value of first element of an array stored in X & Y then as the for loop
    continues it checks every single value with its previous element and then stores the small number in X and large number in Y.
    After that it calculates the difference between smallest and largest number.
 
3)  Check the no of times the basic operation is executed depends only on the size of an input or on any other parameter.
Ans:The number of executions of operations depends on the size of given array. If the size is n, then the number of 
    execution is n=1.
4)  Set up a sum/recurrence, expressing the number of times the basic operation is executed. 
Ans:Eg Arrray[10,3,12,34,6,8]
    1  arr[i]  x  y
    1  10      10 10
    2  3       3  3
    3  12      3  10
    4  34      3  34
    5  6       3  34
    6  8       3  34

5)  What is the efficiency class of the given algorithm? 
Ans:As per the formula the effiency class the given algorithm is O(n)