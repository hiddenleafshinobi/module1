

__________________________________Date Query Language_______________________________________________________
1.1.1
Solution:
SELECT staff_name, design_code from staff_master WHERE (hiredate < '01-JAN-2003')
AND (staff_sal BETWEEN 12000 AND 25000);

1.1.2
Solution:
SELECT staff_code,staff_name,dept_code FROM staff_master WHERE 
(months_between(SYSDATE,hiredate)/12>=18)

1.1.3
Solution:
SELECT * FROM staff_master WHERE mgr_code IS NULL

1.1.4
Solution:
SELECT * FROM book_master WHERE (BOOK_PUB_YEAR BETWEEN 2001 AND 2004) OR (BOOK_NAME LIKE '%&%');

1.1.5
SELECT * FROM staff_master WHERE (staff_name LIKE '%_%');





_________________________________Single Row Functions_______________________________________________________

2.1.1
SELECT staff_name,'$'||staff_sal as staff_salary from staff_master;

2.1.2
SELECT student_name, TO_CHAR (Student_Dob, 'MONTH DD YYYY') AS Student_Dob FROM student_master
WHERE TO_CHAR(Student_Dob, 'DAY') LIKE ('%SATURDAYS') OR TO_CHAR(Student_Dob, 'DAY') LIKE ('%SUNDAYS')

2.1.3
SELECT Staff_Name, ROUND(MONTHS_BETWEEN(SYSDATE,HireDate)) AS Months_Worked FROM Staff_Name 
ORDER BY Months_Worked

2.1.4
SELECT * FROM Staff_Master 
WHERE TO_CHAR(HireDate,'DD') BETWEEN 1 AND 15 AND
TO_CHAR(HireDate,'MONTH') LIKE '%DECEMBER%';

2.1.5
SELECT Staff_Name,Staff_Sal
    CASE
    WHEN Staff_Sal >= 50000 THEN 'A'
    WHEN Staff_Sal >= 25000 AND Staff_Sal<50000 THEN 'B'
    WHEN Staff_Sal > 10000 AND Staff_Sal<25000 THEN 'C'
    ELSE 'D'
    END CASE
    FROM Staff_Master;

2.1.6
SELECT Staff_Name,TO_CHAR(HireDate, 'DD MONTH YYYY') AS Hire_Date,
TO_CHAR('HireDate','DAY') AS DAY FROM Staff_Master ORDER BY TO_CHAR(HireDate,'DAY') DESC;

2.1.7
SELECT INSTR('Mississippi','i',2,3) FROM DUAL;

2.1.9
SELECT Student_Code,Student_Name,
DECODE(dept_code, 20, 'ELECTRICALS',
                    30, 'ELECTRONICS',
                    'others') result
FROM Student_Master;




____________________________________Group Functions_______________________________________________________
2.2.1
SELECT ROUND(MAX(Staff_Sal),0) 'Maximumn',
ROUND(MIN(Staff_Sal),0) 'Minimum',
ROUND(SUM(Staff_Sal),0) 'Sum',
ROUND(AVG(Staff_Sal),0) 'Average',
FROM Staff_Master;

2.2.2
SELECT dept_code, count(Mgr_Code) AS 'Total_Number_of_managers' FROM Staff_Master
GROUP BY dept_code;

2.2.3
SELECT dept_code,SUM(staff_sal) AS sum_sal FROM staff_master
GROUP BY dept_code;
HAVING mgr_code IS NULL AND sum_sal>20000;






____________________________________Joins____________________________________________________________________
3.1.1
SELECT S.STAFF_NAME,
  D.DEPT_CODE,
  D.DEPT_NAME,
  S.STAFF_SAL
FROM STAFFMASTER S,
  DEPARTMENT_MASTER D
WHERE S.DEPT_CODE=D.DEPT_CODE
AND STAFF_SAL > 20000;

3.1.2
SELECT S.STAFF_CODE AS STAFF# ,
  S.STAFF_NAME      AS STAFF,
  D.DEPT_NAME,
  S.MGR_CODE AS MGR#
FROM STAFFMASTER S,
  DEPARTMENT_MASTER D
WHERE S.DEPT_CODE=D.DEPT_CODE;

3.1.3
SELECT S.STUDENT_CODE,S.STUDENT_NAME,B.BOOK_CODE,BB.BOOK_NAME FROM STUDENTMASTER 
S,BOOK_TRANSACTIONS B, BOOK_MASTER BB WHERE S.STUDENT_CODE=B.STUDENT_CODE AND 
TO_CHAR(B.BOOK_EXPECTED_RETURN_DATE,'DD MM YYYY')  LIKE TO_CHAR(SYSDATE,'DD MM YYYY')

SELECT S.STUDENT_CODE,
  S.STUDENT_NAME,
  B.BOOK_CODE,
  BB.BOOK_NAME
FROM STUDENTMASTER S,
  BOOK_TRANSACTIONS B,
  BOOK_MASTER BB
WHERE S.STUDENT_CODE=B.STUDENT_CODE
AND TO_CHAR(B.BOOK_EXPECTED_RETURN_DATE,'DD MM YYYY') LIKE TO_CHAR(SYSDATE,'DD MM YYYY');

3.1.4
SELECT S.STAFF_CODE,S.STAFF_NAME,D.DEPT_NAME,F.DESIGN_NAME,G.BOOK_NAME,H.BOOK_ISSUE_DATE 
FROM STAFFMASTER S,DEPARTMENT_MASTER D,DESIGNATION-MASTER F,BOOK_MASTER F,BOOK_ISSUE_DATE H 
WHERE MONTHS_BETWEEN(TO_CHAR(H.BOOK_ISSUE_DATE,'MM'),TO_CHAR(SYSDATE,'MM'))<1;

3.1.6
SELECT Staff_Code, Staff_Name,STAFF_SAL 
FROM STAFFMASTER WHERE STAFF_SAL<(SELECT AVG(STAFF_SAL) FROM STAFFMASTER);

3.1.7
SELECT AUTHOR,BOOK_NAME FROM BOOK_MASTER GROUP BY AUTHORNAME HAVING COUNT(AUTHOR)>1;

3.1.8
SELECT S.Staff_Code,D.Staff_Name,D.DEPT_NAME 
FROM STAFFMASTER S,BOOK_TRANSACTIONS D GROUP BY S.STAFF_NAME HAVING COUNT(D.STAFF_NAME)>1;

3.1.9
SELECT S.STUDENT_CODE,S.STUDENT_NAME,D.DEPT_NAME 
FROM STAFFMASTER S,DEPARTMENT_MASTER D GROUP BY S.DEPT_CODE HAVING MAX(S.DEPT_CODE);

3.1.10
SELECT S.Staff_Code,S.Staff_Name,D.DEPT_NAME,F.DESIGN_NAME 
FROM STAFFMASTER S, DEPARTMENT_MASTER D,DESIGNATION_MASTER F 
WHERE MONTHS_BETWEEN(TO_CHAR(HIREDATE,'MM') ,TO_CHAR(SYSDATE,'MM'))<3;  

3.1.13
SELECT DEPT_CODE,DEPT_NAME,COUNT(S.STAFF_NAME) AS NUMBEROFPEOPLE 
FROM STAFFMASTER S,DEPARTMENT_MASTER D GROUP BY DEPT_CODE;





____________________________________Datebase Objects_______________________________________________________
4.1.1
CREATE TABLE Customer( CustomerId Number(10) Not Null, Cust_Name Varchar2(20) ,
                      Address1 Varchar2(30) , Address2 Varchar2(30));
                      
4.1.2
ALTER TABLE Customer RENAME Cust_Name TO CustomerName Not Null;

4.1.3
ALTER TABLE Customer ADD(Gender Varchar2(1) Not null, Age Number(3)Not Null, PhoneNo Number(10) not Null);
ALTER TABLE Customer RENAME Customer TO Cust_Table;

4.1.4
Insert into customer values(1000, ‘Allen’, ‘#115 Chicago’, ‘#115 Chicago’, ‘M’, 25, 7878776)
Insert into customer values(1001,'George','#116 France', '#116 France', 'M', 25, 434524)
Insert into customer values(1002, 'Becker', '#114 New York', '#114 New York', 'M', 45, 431525)

4.1.5
ALTER TABLE Cust_Table ADD CONSTRAINT Custid_prim PRIMARY KEY(Customer_Id);

4.1.6
Insert into Cust_Table values(1002, 'John', '#114 Chicago', '#114 Chicago', 'M', 45, 439525);


4.1.7
ALTER TABLE Cust_Table UNCHECK CONSTRAINT CustomerId
Insert into customer values(1002,'Becker','#114 New York','#114 New York','M',45,431525)
Insert into Customer values(1003,'Nanapatekar', '#115 India', '#115 India', 'M', 45, 431525);

4.1.8
ALTER TABLE Cust_TableCHECK CONSTRAINT CustomerId

4.1.9
ALTER TABLE Cust_Table UNCHECK CONSTRAINT Custid_prim;
Insert into customer values(1002,'Becker','#114 New York','#114 New York','M',45,431525)
Insert into Customer values(1003,'Nanapatekar', '#115 India', '#115 India', 'M', 45, 431525);

4.1.10
TRUNCATE TABLE Cust_Table;

4.1.11
ALTER TABLE Cust_Table ADD E-Mail varchar2(50);

4.1.12
ALTER TABLE Cust_Table DROP column E-Mail;

4.1.13
CREATE TABLE Suppliers AS (SELECT * FROM Cust_Table);
                        
4.1.14
DROP TABLE Suppliers
CREATE TABLE CustomerMaster( CustomerId number(20)Primary key,
                             CustomerName varchar2(30) Not Null,
                             Addressl	Varchar2(30) Not Null
                             Address2	Varchar2(30),
                             Gender		Varchar2(l),
                             Age		Number(3),
                             PhoneNo	Number(10));
4.1.15
CREATE TABLE AccountMaster ( Customerld		Number(5),
                             AccountNumber		Number(10,2),
                             AccountType		Char(3),
                             LedgerBalance		Number(10,2) Not Null);
                             CONSTRAINT Acc_PK PRIMARY KEY(AccountNumnber);
CREATE SEQUENCE first
START WITH 20000
INCREMENT BY 1
MAXVALUE 40000;

4.1.16
Alter table Accountmaster ADD constraint ass_fk FOREIGN KEY(customerid) REFERENCES customermaster(customerid);

4.1.17
Insert into customermaster values(1000, Allen, #115 Chicago, #115 Chicago, M, 25, 7878776);
Insert into customermaster values(1001, George, #116 France, #116 France, M, 25, 4345240;
Insert into customermaster values(1002, Becker, #114 New York, #114 New York, M, 45, 4315250;

4.1.18
alter table Accountmaster add constraint ck_ac check(accountype='NRI' or accountype='IND');

4.1.19
lter table Accountmaster add constraint 	Balance_check(ledger balance > 5000);

4.1.20
Delete from Accountmaster,customertable where customerid = 1001

4.1.21
CREATE VIEW Acc_view AS SELECT(Customerid,Customername,Accountnumber,AccountType,ledgerBalance)

4.1.22
CREATE VIEW Acc_view AS SELECT(Customerid,Customername,Accountnumber,AccountType,ledgerBalance);

4.1.23
CREATE VIEW vAccs_Dtls AS SELECT 	Accounttype,ledgerbalance from Accountmaster 
where accounttype = 'IND' and ledgerbalance < 10000;

4.1.25
CREATE sequence SEQ_DEPT 
        minvalue 40 
        start with 40 
        increment by 10 
        MAX VALUE 200 
        cache 40;
        
4.1.26
create table departmentmaster(deptno number(50),Dname varchar2(25),location varchar2(25));
insert into departmentmaster  values(seq_dept.NEXTVAL,'MARKETING','NEW DELHI');
insert into departmentmaster  values(seq_dept.NEXTVAL,'SALES','chennai');
insert into departmentmaster  values(seq_dept.NEXTVAL,'RESEARCH','BOSTON');

4.1.27
DROP sequence seq_dept;

4.1.28
CREATE INDEX no_name on emp(empno);

4.1.29
create SYNONYM synemp for emp;

4.1.30
select * from synemp;

4.1.31
CREATE INDEX IDX_EMP_HIREDATE on emp(HIREDATE);

4.1.32
CREATE sequence SEQ_EMP minvalue 1001 start with 1001
increment by 1 cache 1001; 





___________________________________Data Manipulation Language_______________________________________________________
5.1.1
Create table employee as select * from emp where 1=3;
desc employee;
select * from employee;

5.1.2
select * from employee;

5.1.3
update table employee set job=(select job from employee where empno=7788),
deptno=(select deptno from employee where empno=7788) where empno=7698;

5.1.4
Delete the details of department whose department name is ‘SALES’. 
delete from employee where departmentname like '%sales%';

5.1.5
update table employee set deptno=(select deptno from employee where deptno=7788) where deptno=7698;

5.1.6
insert into emp (empno,'ename','job',mgr,'hiredate',sal,comm,deptno) values (1000,Allen, Clerk,1001,12-jan-01, 3000, 2,10);
insert into emp (empno,'ename','job',mgr,'hiredate',sal,comm,deptno) values (1001,George, analyst, null, 08 Sep 92, 5000,0, 10);
insert into emp (empno,'ename','job',mgr,'hiredate',sal,comm,deptno) values (1002, Becker, Manager, 1000, 4 Nov 92, 2800,4, 20);
insert into emp (empno,'ename','job',mgr,'hiredate',sal,comm,deptno) values (1003, 'Bill', Clerk, 1002, 4 Nov 92,3000, 0, 20);
 




___________________________________Transaction Control Language Statements_______________________________________________________
6.1.1
insert into customermaster (customerid,'customername','address1','address2','gender',age,'phoneno) 
            values ( 6000, John, #115 Chicago, #115 Chicago, M, 25, 7878776, 10000 );
insert into customermaster (customerid,'customername','address1','address2','gender',age,'phoneno) 
            values (	6001, Jack, #116 France, #116 France, M, 25, 434524, 20000  );
insert into customermaster (customerid,'customername','address1','address2','gender',age,'phoneno) 
            values (	6002, James, #114 New York, #114 New York, M, 45, 431525, 15000.50);
            
6.1.2
insert into customermaster (customerid,'customername','address1','address2','gender',age,'phoneno) 
            values ( 6000, John, #115 Chicago, #115 Chicago, M, 25, 7878776, 10000 );
insert into customermaster (customerid,'customername','address1','address2','gender',age,'phoneno) 
            values (	6001, Jack, #116 France, #116 France, M, 25, 434524, 20000  );
insert into customermaster (customerid,'customername','address1','address2','gender',age,'phoneno) 
            values (	6002, James, #114 New York, #114 New York, M, 45, 431525, 15000.50);
savepoint p1;
 
6.1.3
insert into customermaster (customerid,'customername','address1','address2','gender',age,'phoneno) 
             values (	6003, John, #114 Chicago, #114 Chicago, M, 45, 439525, 19000.60);
             
6.1.4
rollback p1;